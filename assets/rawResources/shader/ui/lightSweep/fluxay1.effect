// Copyright (c) 2017-2020 Xiamen Yaji Software Co., Ltd.
CCEffect %{
  techniques:
  - passes:
    - vert: fluxay1-vs:vert
      frag: fluxay1-fs:frag
      depthStencilState:
        depthTest: false
        depthWrite: false
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendDstAlpha: one_minus_src_alpha
      rasterizerState:
        cullMode: none
      properties:
        moveTexture:     { value: white,         inspector: { displayName: "扫光贴图"          }}
        speed:           { value: 0.5,           inspector: { displayName: "速度"              }}
        power:           { value: 0.5,           inspector: { displayName: "强度"              }}
}% 

CCProgram fluxay1-vs %{
  precision highp float;
  #include <cc-global>

  in vec3 a_position;
  in vec2 a_texCoord;
  in vec4 a_color;

  out vec4 v_color;
  out vec2 v_uv0;

  vec4 vert () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;
    v_uv0 = a_texCoord;
    v_color = a_color;

    return pos;
  }
}%

CCProgram fluxay1-fs %{
  precision highp float;
  #include <embedded-alpha>
  #include <alpha-test>
  #include <output>

  in vec4 v_color;
  in vec2 v_uv0;
  #pragma builtin(local)
  layout(set = 2, binding = 10) uniform sampler2D cc_spriteTexture;
  uniform sampler2D moveTexture;

  uniform props {
    float speed;
    float power;
  };

  vec4 frag () {
    vec4 o = CCSampleWithAlphaSeparated(cc_spriteTexture, v_uv0);
    if(o.a >= 1.0) {    
      vec2 fluxayUV = v_uv0;
      fluxayUV.x -= speed * cc_time.x;
      vec4 fluxay = CCSampleWithAlphaSeparated(moveTexture, fluxayUV);
      o.rgb += fluxay.a * power;
    }   
    return o;
  }
}%
