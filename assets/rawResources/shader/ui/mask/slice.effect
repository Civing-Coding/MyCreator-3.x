// Copyright (c) 2017-2020 Xiamen Yaji Software Co., Ltd.
CCEffect %{
  techniques:
  - passes:
    - vert: slice-vs:vert
      frag: slice-fs:frag
      depthStencilState:
        depthTest: false
        depthWrite: false
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendDstAlpha: one_minus_src_alpha
      rasterizerState:
        cullMode: none
      properties:
        num:        { value: [2,2],                inspector: { displayName : "分割数量"     } }
        offset:     { value: [0,0],                inspector: { displayName : "当前偏移量"   } }
}%

CCProgram slice-vs %{
  precision highp float;
  #include <cc-global>

  in vec3 a_position;
  in vec2 a_texCoord;
  in vec4 a_color;

  out vec4 v_color;
  out vec2 v_uv0;

  vec4 vert () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;
    v_uv0 = a_texCoord;
    v_color = a_color;

    return pos;
  }
}%

CCProgram slice-fs %{
  precision highp float;
  #include <embedded-alpha>
  #include <alpha-test>
  #include <output>

  in vec4 v_color;
  in vec2 v_uv0;
  #pragma builtin(local)
  layout(set = 2, binding = 10) uniform sampler2D cc_spriteTexture;

  uniform props {
    vec2  num;
    vec2  offset;
  };

  vec4 frag () {
    vec4 o = vec4(1, 1, 1, 1);

    vec2 v_uv1 = vec2((offset.x + v_uv0.x) / num.x, (offset.y + v_uv0.y) / num.y);
    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, v_uv1);
    o *= v_color;

    return o;
  }
}%
